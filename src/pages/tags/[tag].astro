---
import BlogPost from '@components/BlogPost.astro'
import BaseLayout from '@layouts/BaseLayout.astro'
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'

export interface Props {
  posts: CollectionEntry<'blog'>[]
}

export async function getStaticPaths() {
  const allPosts = await getCollection('blog')
  // return posts.map((entry) => ({
  //   params: { slug: entry.slug },
  //   props: { entry },
  // }))
  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())]
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    )
    return {
      params: { tag },
      props: { posts: filteredPosts },
    }
  })
}

const { tag } = Astro.params
const { posts } = Astro.props
---

<BaseLayout title={tag!}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map((post) => (
        <BlogPost
          url={`/blog/${post.slug}`}
          title={post.data.title}
          pubDate={post.data.pubDate}
        />
      ))
    }
  </ul>
</BaseLayout>

---
import BlogPost from '@components/BlogPost.astro'
import BaseLayout from '@layouts/BaseLayout.astro'
import type { FrontMatter } from '@types'
import type { MarkdownInstance } from 'astro'

export async function getStaticPaths() {
  const allPosts = await Astro.glob<FrontMatter>('../posts/*.md')
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ]
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    )
    return {
      params: { tag },
      props: { posts: filteredPosts },
    }
  })
}

export interface Props {
  posts: MarkdownInstance<FrontMatter>[]
}

const { tag } = Astro.params
const { posts } = Astro.props
---

<BaseLayout title={tag!}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map((post) => (
        <BlogPost url={post.url} title={post.frontmatter.title} pubDate={post.frontmatter.pubDate } />
      ))
    }
  </ul>
</BaseLayout>
